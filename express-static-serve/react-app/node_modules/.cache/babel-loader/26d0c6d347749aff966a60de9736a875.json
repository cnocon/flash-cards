{"ast":null,"code":"var _jsxFileName = \"/Users/cristin/Sites/flash-cards/src/components/Deck/Deck.jsx\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport CardsState from '../../context/Cards/CardsState';\nimport CardsContext from \"../../context/Cards/CardsContext\";\nimport Card from '../Card/Card';\nimport * as Styled from './Deck.styles';\n\nconst Deck = () => {\n  const cards_context = useContext(CardsContext);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [activeCategory, setActiveCategory] = useState({\n    _id: ''\n  });\n\n  const handleNavClick = e => {\n    const increment = e.target.tagName === 'BUTTON' ? e.target.dataset.increment : e.target.parentNode.dataset.increment;\n    const cardCount = Object.values(cards_context.cards).map(c => c.questions).flat().length;\n\n    if (increment > 0) {\n      setActiveIndex(prevActiveIndex => prevActiveIndex + 1 < cardCount ? prevActiveIndex + 1 : 0);\n    } else {\n      setActiveIndex(prevActiveIndex => prevActiveIndex - 1 >= 0 ? prevActiveIndex - 1 : cardCount - 1);\n    }\n  }; // useEffect(() => {\n  // cards_context.getCards();\n  // }, []);\n\n\n  return /*#__PURE__*/React.createElement(CardsState, {\n    category_id: activeCategory._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, true ? cards_context.getActiveCards() : null, true ? cards_context.getCategories() : null, console.log(cards_context.activeCards, cards_context.categories), /*#__PURE__*/React.createElement(Styled.Deck, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    \"data-target\": \"react\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"React\"))))));\n};\n\nexport default Deck;\n{\n  /* Object.values(ContextCards.cards)\n  .flat()\n  .map(fullCategory => fullCategory.questions)\n  .flat()\n  .map((question, i) => { \n  //     return (\n  //       <Card \n  //         data={question}\n  //         activeSide={`front`}\n  //         key={`${i}-${question._id}`}\n  //         position={i}\n  //         isActive={i === activeIndex}\n  //         navClickHandler={() => handleNavClick}\n  //       />\n  //     )\n  //   })\n  // : null}*/\n}","map":{"version":3,"sources":["/Users/cristin/Sites/flash-cards/src/components/Deck/Deck.jsx"],"names":["React","useContext","useEffect","useState","CardsState","CardsContext","Card","Styled","Deck","cards_context","activeIndex","setActiveIndex","activeCategory","setActiveCategory","_id","handleNavClick","e","increment","target","tagName","dataset","parentNode","cardCount","Object","values","cards","map","c","questions","flat","length","prevActiveIndex","getActiveCards","getCategories","console","log","activeCards","categories"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AAEA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAO,KAAKC,MAAZ,MAAwB,eAAxB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,aAAa,GAAGR,UAAU,CAACI,YAAD,CAAhC;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC;AAACW,IAAAA,GAAG,EAAE;AAAN,GAAD,CAApD;;AAIA,QAAMC,cAAc,GAAGC,CAAC,IAAI;AAC1B,UAAMC,SAAS,GAAGD,CAAC,CAACE,MAAF,CAASC,OAAT,KAAqB,QAArB,GAAgCH,CAAC,CAACE,MAAF,CAASE,OAAT,CAAiBH,SAAjD,GAA6DD,CAAC,CAACE,MAAF,CAASG,UAAT,CAAoBD,OAApB,CAA4BH,SAA3G;AACA,UAAMK,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcf,aAAa,CAACgB,KAA5B,EAAmCC,GAAnC,CAAuCC,CAAC,IAAIA,CAAC,CAACC,SAA9C,EAAyDC,IAAzD,GAAgEC,MAAlF;;AACA,QAAIb,SAAS,GAAG,CAAhB,EAAmB;AACjBN,MAAAA,cAAc,CAACoB,eAAe,IAAIA,eAAe,GAAG,CAAlB,GAAsBT,SAAtB,GAAkCS,eAAe,GAAG,CAApD,GAAwD,CAA5E,CAAd;AACD,KAFD,MAEO;AACLpB,MAAAA,cAAc,CAACoB,eAAe,IAAIA,eAAe,GAAG,CAAlB,IAAuB,CAAvB,GAA2BA,eAAe,GAAG,CAA7C,GAAiDT,SAAS,GAAG,CAAjF,CAAd;AACD;AACF,GARD,CAPiB,CAiBjB;AACE;AACF;;;AAEA,sBACE,oBAAC,UAAD;AAAY,IAAA,WAAW,EAAEV,cAAc,CAACE,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,OAAOL,aAAa,CAACuB,cAAd,EAAP,GAAwC,IAD5C,EAEI,OAAOvB,aAAa,CAACwB,aAAd,EAAP,GAAuC,IAF3C,EAGGC,OAAO,CAACC,GAAR,CAAY1B,aAAa,CAAC2B,WAA1B,EAAuC3B,aAAa,CAAC4B,UAArD,CAHH,eAOE,oBAAC,MAAD,CAAQ,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAG,mBAAY,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAJ,CADF,CADF,CADF,CAPF,CADF;AAiBD,CAtCD;;AAwCA,eAAe7B,IAAf;AACU;AAAC;;;;;;;;;;;;;;;;;AAgBY","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\n\nimport CardsState from '../../context/Cards/CardsState';\nimport CardsContext from \"../../context/Cards/CardsContext\";\nimport Card from '../Card/Card';\nimport * as Styled from './Deck.styles'\n\nconst Deck = () => {\n  const cards_context = useContext(CardsContext);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [activeCategory, setActiveCategory] = useState({_id: ''});\n  \n  \n\n  const handleNavClick = e => {\n    const increment = e.target.tagName === 'BUTTON' ? e.target.dataset.increment : e.target.parentNode.dataset.increment;\n    const cardCount = Object.values(cards_context.cards).map(c => c.questions).flat().length;\n    if (increment > 0) {\n      setActiveIndex(prevActiveIndex => prevActiveIndex + 1 < cardCount ? prevActiveIndex + 1 : 0)\n    } else { \n      setActiveIndex(prevActiveIndex => prevActiveIndex - 1 >= 0 ? prevActiveIndex - 1 : cardCount - 1) \n    }\n  }\n\n  // useEffect(() => {\n    // cards_context.getCards();\n  // }, []);\n  \n  return (\n    <CardsState category_id={activeCategory._id}>\n      { true ? cards_context.getActiveCards() : null }\n      { true ? cards_context.getCategories() : null }\n      {console.log(cards_context.activeCards, cards_context.categories)}\n          \n      \n      \n      <Styled.Deck>\n        <nav>\n          <ul>\n            <li><a data-target='react'>React</a></li>\n          </ul>\n        </nav>\n      </Styled.Deck>\n    </CardsState>\n  );\n};\n\nexport default Deck;\n          {/* Object.values(ContextCards.cards)\n          .flat()\n          .map(fullCategory => fullCategory.questions)\n          .flat()\n          .map((question, i) => { \n          //     return (\n          //       <Card \n          //         data={question}\n          //         activeSide={`front`}\n          //         key={`${i}-${question._id}`}\n          //         position={i}\n          //         isActive={i === activeIndex}\n          //         navClickHandler={() => handleNavClick}\n          //       />\n          //     )\n          //   })\n          // : null}*/}"]},"metadata":{},"sourceType":"module"}