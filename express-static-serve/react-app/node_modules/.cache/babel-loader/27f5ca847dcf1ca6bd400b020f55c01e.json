{"ast":null,"code":"import _slicedToArray from\"/Users/cristin/Sites/flash-cards/express-static-serve/react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useContext}from'react';import cardsContext from\"../../context/Cards/CardsContext\";import Card from'../Card/Card';import*as Styled from'./Deck.styles';var Deck=function Deck(){var CardsContext=useContext(cardsContext);console.log(window.location);var _useState=useState(0),_useState2=_slicedToArray(_useState,2),activeIndex=_useState2[0],setActiveIndex=_useState2[1];var _useState3=useState('all'),_useState4=_slicedToArray(_useState3,2),activeCategorySlug=_useState4[0],setActiveCategorySlug=_useState4[1];var colors={all:'blue',accessibility:'orange',css:'red',gatsby:'purple',git:'yellow',html5:'green',javascript:'blue',node:'green',performance:'yellow',react:'royal-blue'};var handleCategoryClick=function handleCategoryClick(categorySlug){// Set active index back to 0 since we're switching categories\nsetActiveIndex(0);setActiveCategorySlug(categorySlug);};var handleNavClick=function handleNavClick(e){var increment=e.target.tagName==='BUTTON'?e.target.dataset.increment:e.target.parentNode.dataset.increment;var cards=activeCategorySlug==='all'?Object.values(CardsContext.cards).map(function(c){return c.questions;}).flat():CardsContext.cards[activeCategorySlug].questions;var cardCount=cards.length;if(increment>0){setActiveIndex(function(prevActiveIndex){return prevActiveIndex+1<=cardCount-1?prevActiveIndex+1:0;});}else{setActiveIndex(function(prevActiveIndex){return prevActiveIndex-1>=0?prevActiveIndex-1:cardCount-1;});}};useEffect(function(){if(!CardsContext.cards.length>0){CardsContext.getCards();}if(!CardsContext.categories.length>0){CardsContext.getCategories();}},[]);return/*#__PURE__*/React.createElement(Styled.Deck,null,/*#__PURE__*/React.createElement(Styled.AppHeader,null,/*#__PURE__*/React.createElement(Styled.AppHeading,null,\"Front End Dev Flash Cards\"),/*#__PURE__*/React.createElement(Styled.CategoriesNav,null,/*#__PURE__*/React.createElement(\"a\",{onClick:function onClick(){return handleCategoryClick('all');},key:\"all\",className:activeCategorySlug==='all'?'white active':''},\"All\"),CardsContext.categories.sort(function(a,b){return a<b?-1:1;}).map(function(fullCategory,i){if(!fullCategory){return null;}return/*#__PURE__*/React.createElement(\"a\",{className:fullCategory.slug===activeCategorySlug?\"\".concat(colors[activeCategorySlug],\" active\"):'',onClick:function onClick(){return handleCategoryClick(fullCategory.slug);},key:\"\".concat(fullCategory._id,\"-\").concat(i)},fullCategory.name);}))),activeCategorySlug==='all'?Object.values(CardsContext.cards).map(function(fullCategory,categoryIndex){return fullCategory.questions;}).flat().map(function(question,i){return/*#__PURE__*/React.createElement(Card,{data:question,activeSide:\"front\",key:\"\".concat(i,\"-\").concat(question._id),position:i,isActive:activeIndex===i,questionCount:activeCategorySlug==='all'?Object.values(CardsContext.cards).map(function(c){return c.questions;}).flat().length:CardsContext.cards[activeCategorySlug].questions.length,navClickHandler:function navClickHandler(){return handleNavClick;}});}):CardsContext.cards[activeCategorySlug].questions.map(function(question,i){return/*#__PURE__*/React.createElement(Card,{data:question,activeSide:\"front\",key:\"\".concat(i,\"-\").concat(question._id),position:i,isActive:activeIndex===i,questionCount:activeCategorySlug==='all'?Object.values(CardsContext.cards).map(function(c){return c.questions;}).flat().length:CardsContext.cards[activeCategorySlug].questions.length,navClickHandler:function navClickHandler(){return handleNavClick;}});}));};export default Deck;","map":{"version":3,"sources":["/Users/cristin/Sites/flash-cards/express-static-serve/react-app/src/components/Deck/Deck.jsx"],"names":["React","useState","useEffect","useContext","cardsContext","Card","Styled","Deck","CardsContext","console","log","window","location","activeIndex","setActiveIndex","activeCategorySlug","setActiveCategorySlug","colors","all","accessibility","css","gatsby","git","html5","javascript","node","performance","react","handleCategoryClick","categorySlug","handleNavClick","e","increment","target","tagName","dataset","parentNode","cards","Object","values","map","c","questions","flat","cardCount","length","prevActiveIndex","getCards","categories","getCategories","sort","a","b","fullCategory","i","slug","_id","name","categoryIndex","question"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport cardsContext from \"../../context/Cards/CardsContext\";\nimport Card from '../Card/Card';\nimport * as Styled from './Deck.styles'\n\nconst Deck = () => {\n  const CardsContext = useContext(cardsContext);\n  console.log(window.location)\n  \n  const [activeIndex, setActiveIndex] = useState(0);\n  const [activeCategorySlug, setActiveCategorySlug] = useState('all');\n  const colors = {\n    all: 'blue',\n    accessibility: 'orange',\n    css: 'red',\n    gatsby: 'purple',\n    git: 'yellow',\n    html5: 'green',\n    javascript: 'blue',\n    node: 'green',\n    performance: 'yellow',\n    react: 'royal-blue'\n  }\n\n  const handleCategoryClick = categorySlug => {\n    // Set active index back to 0 since we're switching categories\n    setActiveIndex(0)\n    setActiveCategorySlug(categorySlug)\n  }\n\n  const handleNavClick = e => {\n    const increment = e.target.tagName === 'BUTTON' ? e.target.dataset.increment : e.target.parentNode.dataset.increment;\n    const cards = activeCategorySlug === 'all' ? Object.values(CardsContext.cards).map(c => c.questions).flat() : CardsContext.cards[activeCategorySlug].questions;\n    const cardCount = cards.length;\n    \n    if (increment > 0) {\n      setActiveIndex(prevActiveIndex => prevActiveIndex + 1 <= cardCount - 1 ? prevActiveIndex + 1 : 0)\n    } else { \n      setActiveIndex(prevActiveIndex => prevActiveIndex - 1 >= 0 ? prevActiveIndex - 1 : cardCount - 1) \n    }\n  }\n\n  useEffect(() => {\n    if (!CardsContext.cards.length > 0) {\n      CardsContext.getCards();\n    }\n\n    if (!CardsContext.categories.length > 0) {\n      CardsContext.getCategories();\n    }\n  }, []);\n  \n  return (\n    <Styled.Deck>\n      <Styled.AppHeader>\n        <Styled.AppHeading>Front End Dev Flash Cards</Styled.AppHeading>\n        <Styled.CategoriesNav>\n          <a onClick={() => handleCategoryClick('all') } key=\"all\" className={activeCategorySlug === 'all' ? 'white active' : ''}>All</a>\n          \n          { CardsContext.categories.sort((a, b) => a < b ? -1 : 1)\n              .map((fullCategory, i) => {\n                if (!fullCategory) {return null}\n                return (\n                  <a className={fullCategory.slug === activeCategorySlug ? `${colors[activeCategorySlug]} active` : ''} \n                    onClick={() => handleCategoryClick(fullCategory.slug) }\n                    key={`${fullCategory._id}-${i}`}>\n                    {fullCategory.name}\n                  </a>\n                )\n            })\n          }\n        </Styled.CategoriesNav>\n      </Styled.AppHeader>\n\n      { activeCategorySlug === 'all'\n        ? Object.values(CardsContext.cards)\n          .map((fullCategory, categoryIndex) => fullCategory.questions)\n          .flat()\n          .map((question, i) => {\n            return (\n              <Card \n                data={question}\n                activeSide='front'\n                key={`${i}-${question._id}`}\n                position={i}\n                isActive={activeIndex === i}\n                questionCount={(\n                  activeCategorySlug === 'all' \n                  ? Object.values(CardsContext.cards).map(c => c.questions).flat().length\n                  : CardsContext.cards[activeCategorySlug].questions.length\n                )}\n                navClickHandler={() => handleNavClick}\n              />\n            )\n          })\n        \n        : CardsContext.cards[activeCategorySlug].questions.map((question, i) => {\n          return (\n            <Card \n              data={question}\n              activeSide='front'\n              key={`${i}-${question._id}`}\n              position={i}\n              isActive={activeIndex === i}\n              questionCount={(\n                activeCategorySlug === 'all' \n                ? Object.values(CardsContext.cards).map(c => c.questions).flat().length\n                : CardsContext.cards[activeCategorySlug].questions.length\n              )}\n              navClickHandler={() => handleNavClick} \n            />\n          )\n        })\n      }\n    </Styled.Deck>\n  );\n};\n\nexport default Deck;"]},"metadata":{},"sourceType":"module"}