{"ast":null,"code":"var _jsxFileName = \"/Users/cristin/Sites/flash-cards/src/components/Deck/Deck.jsx\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Card from '../Card/Card';\nimport cardsContext from \"../../context/Cards/CardsContext\";\n\nconst Deck = () => {\n  const CardsContext = useContext(cardsContext);\n  const [activeIndex, setActiveIndex] = useState(0);\n  useEffect(() => {\n    CardsContext.getCards();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, CardsContext.cards.length ? CardsContext.cards.map(card => /*#__PURE__*/React.createElement(Card, {\n    data: card,\n    key: card._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  })) : null);\n};\n\nexport default Deck;","map":{"version":3,"sources":["/Users/cristin/Sites/flash-cards/src/components/Deck/Deck.jsx"],"names":["React","useContext","useEffect","useState","Card","cardsContext","Deck","CardsContext","activeIndex","setActiveIndex","getCards","cards","length","map","card","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,YAAY,GAAGN,UAAU,CAACI,YAAD,CAA/B;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,CAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,YAAY,CAACG,QAAb;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,0CAEIH,YAAY,CAACI,KAAb,CAAmBC,MAAnB,GACEL,YAAY,CAACI,KAAb,CAAmBE,GAAnB,CAAuBC,IAAI,iBAC3B,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAkB,IAAA,GAAG,EAAEA,IAAI,CAACC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF,GAIE,IANN,CADF;AAWD,CAnBD;;AAqBA,eAAeT,IAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport Card from '../Card/Card';\nimport cardsContext from \"../../context/Cards/CardsContext\";\n\nconst Deck = () => {\n  const CardsContext = useContext(cardsContext);\n  const [activeIndex, setActiveIndex] = useState(0)\n\n  useEffect(() => {\n    CardsContext.getCards();\n  }, []);\n\n  return (\n    <>\n      {\n        CardsContext.cards.length\n        ? CardsContext.cards.map(card => (\n          <Card data={card} key={card._id} />\n        ))\n        : null\n      }\n    </>\n  );\n};\n\nexport default Deck;"]},"metadata":{},"sourceType":"module"}