{"ast":null,"code":"var _jsxFileName = \"/Users/cristin/Sites/flash-cards/src/components/Deck/Deck.jsx\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Card from '../Card/Card';\nimport cardsContext from \"../../context/Cards/CardsContext\";\nimport * as Styled from './Deck.styles';\n\nconst Deck = () => {\n  const CardsContext = useContext(cardsContext); // const CategoriesContext = useContext(categoriesContext);\n\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [activeCategory, setActiveCategory] = useState();\n  const [categoryCards, setCategoryCards] = useState(CardsContext.cards); // const obj = {};\n  // const categories = Object.values(CardsContext.cards).forEach(q => {\n  //   obj[q.slug] = {name: q.name, question_ids: q.questions};\n  // });\n\n  const handleCategoryClick = (e, categorySlug) => {\n    e.preventDefault();\n    setActiveCategory(categorySlug);\n    setCategoryCards(() => activeCategory === 'all' ? CardsContext.cards : CardsContext.cards[activeCategory]);\n  };\n\n  const handleNavClick = e => {\n    const increment = e.target.tagName === 'BUTTON' ? e.target.dataset.increment : e.target.parentNode.dataset.increment;\n    const cardCount = Object.values(CardsContext.cards).map(c => c.questions).flat().length;\n\n    if (increment > 0) {\n      // If advancing to next\n      setActiveIndex(prevActiveIndex => prevActiveIndex + 1 < cardCount ? prevActiveIndex + 1 : 0);\n    } else {\n      // If going back to previous\n      setActiveIndex(prevActiveIndex => prevActiveIndex - 1 >= 0 ? prevActiveIndex - 1 : cardCount - 1);\n    }\n  };\n\n  useEffect(() => {\n    if (!activeCategory) {\n      setActiveCategory('all');\n    }\n\n    ;\n    setCategoryCards(activeCategory === 'all' ? CardsContext.cards : CardsContext.cards[activeCategory]);\n    CardsContext.getCards();\n    console.log('categoryCards', categoryCards);\n  }, [categoryCards, activeCategory]);\n  return /*#__PURE__*/React.createElement(Styled.Deck, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    key: 'all',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: e => handleCategoryClick(e, 'all'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 27\n    }\n  }, \"Clear All\")), CardsContext.cards ? CardsContext.cards.map(q => /*#__PURE__*/React.createElement(\"li\", {\n    key: q.slug,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: e => handleCategoryClick(e, q.slug),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 32\n    }\n  }, q.name))) : [])), CardsContext.cards ? CardsContext.cards[activeCategory].map(fullCategory => fullCategory.questions.map((question, i) => /*#__PURE__*/React.createElement(Card, {\n    data: question,\n    activeSide: `front`,\n    key: `${i}-${question._id}`,\n    position: i,\n    isActive: i === activeIndex,\n    navClickHandler: () => handleNavClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }))) : null);\n};\n\nexport default Deck;","map":{"version":3,"sources":["/Users/cristin/Sites/flash-cards/src/components/Deck/Deck.jsx"],"names":["React","useContext","useEffect","useState","Card","cardsContext","Styled","Deck","CardsContext","activeIndex","setActiveIndex","activeCategory","setActiveCategory","categoryCards","setCategoryCards","cards","handleCategoryClick","e","categorySlug","preventDefault","handleNavClick","increment","target","tagName","dataset","parentNode","cardCount","Object","values","map","c","questions","flat","length","prevActiveIndex","getCards","console","log","q","slug","name","fullCategory","question","i","_id"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport Card from '../Card/Card';\nimport cardsContext from \"../../context/Cards/CardsContext\";\nimport * as Styled from './Deck.styles'\n\nconst Deck = () => {\n  const CardsContext = useContext(cardsContext);\n  // const CategoriesContext = useContext(categoriesContext);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [activeCategory, setActiveCategory] = useState();\n  const [categoryCards, setCategoryCards] = useState(CardsContext.cards);\n  // const obj = {};\n  // const categories = Object.values(CardsContext.cards).forEach(q => {\n  //   obj[q.slug] = {name: q.name, question_ids: q.questions};\n  // });\n  \n  const handleCategoryClick = (e, categorySlug) => {\n    e.preventDefault();\n    setActiveCategory(categorySlug)\n    setCategoryCards(() => (activeCategory === 'all' ? CardsContext.cards : CardsContext.cards[activeCategory]))\n  }\n\n  const handleNavClick = e => {\n    const increment = e.target.tagName === 'BUTTON' ? e.target.dataset.increment : e.target.parentNode.dataset.increment;\n    const cardCount = Object.values(CardsContext.cards).map(c => c.questions).flat().length;\n    \n    if (increment > 0) {\n      // If advancing to next\n      setActiveIndex(prevActiveIndex => prevActiveIndex + 1 < cardCount ? prevActiveIndex + 1 : 0)\n    } else { \n      // If going back to previous\n      setActiveIndex(prevActiveIndex => prevActiveIndex - 1 >= 0 ? prevActiveIndex - 1 : cardCount - 1) \n    } \n  }\n  \n  useEffect(() => {\n    if (!activeCategory) {setActiveCategory('all')};\n    setCategoryCards(activeCategory === 'all' ? CardsContext.cards : CardsContext.cards[activeCategory])\n    CardsContext.getCards();\n    console.log('categoryCards', categoryCards);\n  }, [categoryCards, activeCategory]);\n\n  return (\n    <Styled.Deck>\n      <nav>\n        <ul>\n          <li key={'all'}><a onClick={e => handleCategoryClick(e, 'all')}>Clear All</a></li>\n          { CardsContext.cards\n            ? CardsContext.cards.map(q => (\n              <li key={q.slug}><a onClick={e => handleCategoryClick(e, q.slug)}>{q.name}</a></li>)) \n            : []\n          }\n        </ul>\n      </nav>\n      { CardsContext.cards\n        ? CardsContext.cards[activeCategory].map(fullCategory => (\n            fullCategory.questions.map((question, i) => (\n              <Card \n                data={question}\n                activeSide={`front`}\n                key={`${i}-${question._id}`}\n                position={i}\n                isActive={i === activeIndex}\n                navClickHandler={() => handleNavClick}  />\n            ))\n          ))\n        : null }\n    </Styled.Deck>\n  );\n};\n\nexport default Deck;"]},"metadata":{},"sourceType":"module"}