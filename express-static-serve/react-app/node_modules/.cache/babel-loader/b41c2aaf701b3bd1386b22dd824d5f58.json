{"ast":null,"code":"var _jsxFileName = \"/Users/cristin/Sites/flash-cards/src/components/Deck/Deck.jsx\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport cardsContext from \"../../context/Cards/CardsContext\";\nimport Card from '../Card/Card';\nimport * as Styled from './Deck.styles';\n\nconst Deck = () => {\n  const CardsContext = useContext(cardsContext);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [activeCategory, setActiveCategory] = useState('');\n\n  const handleCategoryClick = (e, categoryId, categorySlug) => {\n    // Set active index back to 0 since we're switching categories\n    setActiveIndex(0);\n    setActiveCategory(prevActiveCategory => categoryId);\n    CardsContext.getActiveCards(activeCategory);\n  };\n\n  const handleNavClick = e => {\n    const increment = e.target.tagName === 'BUTTON' ? e.target.dataset.increment : e.target.parentNode.dataset.increment;\n    const cardCount = Object.values(CardsContext.cards).map(c => c.questions).flat().length;\n\n    if (increment > 0) {\n      setActiveIndex(prevActiveIndex => prevActiveIndex + 1 < cardCount ? prevActiveIndex + 1 : 0);\n    } else {\n      setActiveIndex(prevActiveIndex => prevActiveIndex - 1 >= 0 ? prevActiveIndex - 1 : cardCount - 1);\n    }\n  };\n\n  useEffect(() => {\n    CardsContext.getActiveCards(activeCategory);\n  }, []);\n  return /*#__PURE__*/React.createElement(Styled.Deck, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Styled.AppHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Styled.AppHeading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Front End Dev Flash Cards\"), /*#__PURE__*/React.createElement(Styled.CategoriesNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, CardsContext.activeCards && CardsContext.activeCards.length > 0 ? Object.values(CardsContext.activeCards).map((fullCategory, i) => /*#__PURE__*/React.createElement(\"a\", {\n    key: `${fullCategory._id}-${i}`,\n    onClick: e => handleCategoryClick(e, fullCategory._id, fullCategory.slug),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, fullCategory.name)) : Object.values(CardsContext.activeCards).map((fullCategory, i) => /*#__PURE__*/React.createElement(\"a\", {\n    key: `${fullCategory._id}-${i}`,\n    onClick: e => handleCategoryClick(e, fullCategory._id, fullCategory.slug),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, fullCategory.name)))), CardsContext.activeCards && CardsContext.activeCards.length > 0 ? Object.values(CardsContext.activeCards).map(fullCategory => fullCategory.questions).flat().map((question, i) => /*#__PURE__*/React.createElement(Card, {\n    data: question,\n    activeSide: `front`,\n    key: `${i}-${question._id}`,\n    position: i,\n    isActive: true,\n    navClickHandler: () => handleNavClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  })) : null);\n};\n\nexport default Deck;","map":{"version":3,"sources":["/Users/cristin/Sites/flash-cards/src/components/Deck/Deck.jsx"],"names":["React","useState","useEffect","useContext","cardsContext","Card","Styled","Deck","CardsContext","activeIndex","setActiveIndex","activeCategory","setActiveCategory","handleCategoryClick","e","categoryId","categorySlug","prevActiveCategory","getActiveCards","handleNavClick","increment","target","tagName","dataset","parentNode","cardCount","Object","values","cards","map","c","questions","flat","length","prevActiveIndex","activeCards","fullCategory","i","_id","slug","name","question"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\n\n\nimport cardsContext from \"../../context/Cards/CardsContext\";\n\nimport Card from '../Card/Card';\nimport * as Styled from './Deck.styles'\n\nconst Deck = () => {\n  const CardsContext = useContext(cardsContext);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [activeCategory, setActiveCategory] = useState('');\n\n  const handleCategoryClick = (e, categoryId, categorySlug) => {\n    // Set active index back to 0 since we're switching categories\n    setActiveIndex(0)\n    setActiveCategory(prevActiveCategory => categoryId)\n    CardsContext.getActiveCards(activeCategory)\n  }\n\n  const handleNavClick = e => {\n    const increment = e.target.tagName === 'BUTTON' ? e.target.dataset.increment : e.target.parentNode.dataset.increment;\n    const cardCount = Object.values(CardsContext.cards).map(c => c.questions).flat().length;\n    \n    if (increment > 0) {\n      setActiveIndex(prevActiveIndex => prevActiveIndex + 1 < cardCount ? prevActiveIndex + 1 : 0)\n    } else { \n      setActiveIndex(prevActiveIndex => prevActiveIndex - 1 >= 0 ? prevActiveIndex - 1 : cardCount - 1) \n    }\n  }\n\n  useEffect(() => {\n    CardsContext.getActiveCards(activeCategory);\n  }, []);\n  \n  return (\n    <Styled.Deck>\n\n      <Styled.AppHeader>\n        <Styled.AppHeading>Front End Dev Flash Cards</Styled.AppHeading>\n\n        <Styled.CategoriesNav>\n          {\n            (CardsContext.activeCards && CardsContext.activeCards.length > 0)\n            ? Object.values(CardsContext.activeCards).map((fullCategory, i) => (\n                <a key={`${fullCategory._id}-${i}`}\n                  onClick={(e) => handleCategoryClick(e, fullCategory._id, fullCategory.slug)}>{fullCategory.name}\n                </a>)\n              )\n            : Object.values(CardsContext.activeCards).map((fullCategory, i) => (\n                <a key={`${fullCategory._id}-${i}`}\n                  onClick={(e) => handleCategoryClick(e, fullCategory._id, fullCategory.slug)}>{fullCategory.name}\n                </a>)\n              )\n          }\n        </Styled.CategoriesNav>\n\n      </Styled.AppHeader>\n\n      { (CardsContext.activeCards && CardsContext.activeCards.length > 0)\n        ? Object.values(CardsContext.activeCards)\n          .map(fullCategory => fullCategory.questions)\n          .flat()\n          .map((question, i) => ( \n            <Card \n              data={question}\n              activeSide={`front`}\n              key={`${i}-${question._id}`}\n              position={i}\n              isActive={true}\n              navClickHandler={() => handleNavClick} \n            />\n          ))\n        : null \n      }\n    </Styled.Deck>\n  );\n};\n\nexport default Deck;\n          "]},"metadata":{},"sourceType":"module"}