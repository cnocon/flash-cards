{"ast":null,"code":"var _jsxFileName = \"/Users/cristin/Sites/flash-cards/src/components/Deck/Deck.jsx\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Card from '../Card/Card';\nimport cardsContext from \"../../context/Cards/CardsContext\";\n\nconst Deck = () => {\n  const CardsContext = useContext(cardsContext);\n  const [activeIndex, setActiveIndex] = useState(0); // const cardDeck = CardsContext.getCards();\n\n  console.log('cardDeck', CardsContext.cards[activeIndex]);\n\n  const handleNavClick = increment => {\n    if (increment > 0) {\n      // If advancing to next\n      setActiveIndex(prevActiveIndex => prevActiveIndex + 1 < CardsContext.cards.length ? prevActiveIndex + 1 : 0);\n    } else {\n      // If going back to previous\n      setActiveIndex(prevActiveIndex => prevActiveIndex - 1 >= 0 ? prevActiveIndex - 1 : 0);\n    }\n  };\n\n  useEffect(() => {\n    CardsContext.getCards();\n  }, [activeIndex]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, CardsContext.cards && activeIndex ? /*#__PURE__*/React.createElement(Card, {\n    data: CardsContext.cards[activeIndex],\n    key: activeIndex,\n    navClickHandler: () => handleNavClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }) : null);\n};\n\nexport default Deck;","map":{"version":3,"sources":["/Users/cristin/Sites/flash-cards/src/components/Deck/Deck.jsx"],"names":["React","useContext","useEffect","useState","Card","cardsContext","Deck","CardsContext","activeIndex","setActiveIndex","console","log","cards","handleNavClick","increment","prevActiveIndex","length","getCards"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,YAAY,GAAGN,UAAU,CAACI,YAAD,CAA/B;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,CAAD,CAA9C,CAFiB,CAGjB;;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,YAAY,CAACK,KAAb,CAAmBJ,WAAnB,CAAxB;;AAEA,QAAMK,cAAc,GAAGC,SAAS,IAAI;AAClC,QAAIA,SAAS,GAAG,CAAhB,EAAmB;AACjB;AACAL,MAAAA,cAAc,CAACM,eAAe,IAAIA,eAAe,GAAG,CAAlB,GAAsBR,YAAY,CAACK,KAAb,CAAmBI,MAAzC,GAAkDD,eAAe,GAAG,CAApE,GAAwE,CAA5F,CAAd;AACD,KAHD,MAGO;AACL;AACAN,MAAAA,cAAc,CAACM,eAAe,IAAIA,eAAe,GAAG,CAAlB,IAAuB,CAAvB,GAA2BA,eAAe,GAAG,CAA7C,GAAiD,CAArE,CAAd;AACD;AACF,GARD;;AAUAb,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,YAAY,CAACU,QAAb;AAED,GAHQ,EAGN,CAACT,WAAD,CAHM,CAAT;AAKA,sBACE,0CAEID,YAAY,CAACK,KAAb,IAAsBJ,WAAtB,gBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAED,YAAY,CAACK,KAAb,CAAmBJ,WAAnB,CAAZ;AAA6C,IAAA,GAAG,EAAEA,WAAlD;AAA+D,IAAA,eAAe,EAAE,MAAMK,cAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAEE,IAJN,CADF;AASD,CA9BD;;AAgCA,eAAeP,IAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport Card from '../Card/Card';\nimport cardsContext from \"../../context/Cards/CardsContext\";\n\nconst Deck = () => {\n  const CardsContext = useContext(cardsContext);\n  const [activeIndex, setActiveIndex] = useState(0);\n  // const cardDeck = CardsContext.getCards();\n  console.log('cardDeck', CardsContext.cards[activeIndex])\n\n  const handleNavClick = increment => {\n    if (increment > 0) {\n      // If advancing to next\n      setActiveIndex(prevActiveIndex => prevActiveIndex + 1 < CardsContext.cards.length ? prevActiveIndex + 1 : 0)\n    } else { \n      // If going back to previous\n      setActiveIndex(prevActiveIndex => prevActiveIndex - 1 >= 0 ? prevActiveIndex - 1 : 0) \n    } \n  }\n\n  useEffect(() => {\n    CardsContext.getCards();\n\n  }, [activeIndex]);\n\n  return (\n    <>\n      {\n        CardsContext.cards && activeIndex\n        ? <Card data={CardsContext.cards[activeIndex]} key={activeIndex} navClickHandler={() => handleNavClick} />\n        : null\n      }\n    </>\n  );\n};\n\nexport default Deck;"]},"metadata":{},"sourceType":"module"}