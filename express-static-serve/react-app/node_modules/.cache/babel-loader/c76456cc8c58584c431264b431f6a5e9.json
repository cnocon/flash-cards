{"ast":null,"code":"var _jsxFileName = \"/Users/cristin/Sites/flash-cards/src/components/Deck/Deck.jsx\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport cardsContext from \"../../context/Cards/CardsContext\";\nimport Card from '../Card/Card';\nimport * as Styled from './Deck.styles';\n\nconst Deck = () => {\n  const CardsContext = useContext(cardsContext);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [questionCount, setQuestionCount] = useState(0);\n  const [activeCategorySlug, setActiveCategorySlug] = useState('all');\n\n  const handleCategoryClick = categorySlug => {\n    // Set active index back to 0 since we're switching categories\n    const questionCount = categorySlug === 'all' ? Object.values(CardsContext.cards).map(c => c.questions).flat().length : CardsContext.cards[categorySlug].questions.length;\n    setActiveIndex(0);\n    setQuestionCount();\n    setActiveCategorySlug(categorySlug);\n  };\n\n  const handleNavClick = e => {\n    const increment = e.target.tagName === 'BUTTON' ? e.target.dataset.increment : e.target.parentNode.dataset.increment;\n    const cards = activeCategorySlug === 'all' ? Object.values(CardsContext.cards).map(c => c.questions).flat() : CardsContext.cards[activeCategorySlug].questions;\n    const cardCount = cards.length;\n\n    if (increment > 0) {\n      setActiveIndex(prevActiveIndex => prevActiveIndex + 1 <= cardCount - 1 ? prevActiveIndex + 1 : 0);\n    } else {\n      setActiveIndex(prevActiveIndex => prevActiveIndex - 1 >= 0 ? prevActiveIndex - 1 : cardCount - 1);\n    }\n  };\n\n  useEffect(() => {\n    CardsContext.getCards();\n    CardsContext.getCategories();\n  }, [activeCategorySlug, activeIndex]);\n  return /*#__PURE__*/React.createElement(Styled.Deck, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Styled.AppHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Styled.AppHeading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Front End Dev Flash Cards\"), /*#__PURE__*/React.createElement(Styled.CategoriesNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: () => handleCategoryClick('all'),\n    key: \"all\",\n    className: activeCategorySlug === 'all' ? 'active' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"All\"), CardsContext.categories.sort((a, b) => a < b ? -1 : 1).map((fullCategory, i) => {\n    if (!fullCategory) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"a\", {\n      className: fullCategory.slug === activeCategorySlug ? 'active' : '',\n      onClick: () => handleCategoryClick(fullCategory.slug),\n      key: `${fullCategory._id}-${i}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }\n    }, fullCategory.name);\n  }))), activeCategorySlug === 'all' ? Object.values(CardsContext.cards).map((fullCategory, categoryIndex) => fullCategory.questions).flat().map((question, i) => {\n    return /*#__PURE__*/React.createElement(Card, {\n      data: question,\n      activeSide: \"front\",\n      key: `${i}-${question._id}`,\n      position: i,\n      isActive: activeIndex === i,\n      navClickHandler: () => handleNavClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    });\n  }) : CardsContext.cards[activeCategorySlug].questions.map((question, i) => {\n    return /*#__PURE__*/React.createElement(Card, {\n      data: question,\n      activeSide: \"front\",\n      key: `${i}-${question._id}`,\n      position: i,\n      isActive: activeIndex === i,\n      navClickHandler: () => handleNavClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    });\n  }));\n};\n\nexport default Deck;","map":{"version":3,"sources":["/Users/cristin/Sites/flash-cards/src/components/Deck/Deck.jsx"],"names":["React","useState","useEffect","useContext","cardsContext","Card","Styled","Deck","CardsContext","activeIndex","setActiveIndex","questionCount","setQuestionCount","activeCategorySlug","setActiveCategorySlug","handleCategoryClick","categorySlug","Object","values","cards","map","c","questions","flat","length","handleNavClick","e","increment","target","tagName","dataset","parentNode","cardCount","prevActiveIndex","getCards","getCategories","categories","sort","a","b","fullCategory","i","slug","_id","name","categoryIndex","question"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport cardsContext from \"../../context/Cards/CardsContext\";\nimport Card from '../Card/Card';\nimport * as Styled from './Deck.styles'\n\nconst Deck = () => {\n  const CardsContext = useContext(cardsContext);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [questionCount, setQuestionCount] = useState(0);\n  const [activeCategorySlug, setActiveCategorySlug] = useState('all');\n\n  const handleCategoryClick = categorySlug => {\n    // Set active index back to 0 since we're switching categories\n    const questionCount = categorySlug === 'all' \n      ? Object.values(CardsContext.cards).map(c => c.questions).flat().length \n      : CardsContext.cards[categorySlug].questions.length;\n    \n    setActiveIndex(0)\n    setQuestionCount()\n    setActiveCategorySlug(categorySlug)\n  }\n\n  const handleNavClick = e => {\n    const increment = e.target.tagName === 'BUTTON' ? e.target.dataset.increment : e.target.parentNode.dataset.increment;\n    const cards = activeCategorySlug === 'all' ? Object.values(CardsContext.cards).map(c => c.questions).flat() : CardsContext.cards[activeCategorySlug].questions;\n    const cardCount = cards.length;\n    \n    if (increment > 0) {\n      setActiveIndex(prevActiveIndex => prevActiveIndex + 1 <= cardCount - 1 ? prevActiveIndex + 1 : 0)\n    } else { \n      setActiveIndex(prevActiveIndex => prevActiveIndex - 1 >= 0 ? prevActiveIndex - 1 : cardCount - 1) \n    }\n  }\n\n  useEffect(() => {\n    CardsContext.getCards();\n    CardsContext.getCategories();\n  }, [activeCategorySlug, activeIndex]);\n  \n  return (\n    <Styled.Deck>\n\n      <Styled.AppHeader>\n        <Styled.AppHeading>Front End Dev Flash Cards</Styled.AppHeading>\n        <Styled.CategoriesNav>\n          <a onClick={() => handleCategoryClick('all') } key=\"all\" className={activeCategorySlug === 'all' ? 'active' : ''}>All</a>\n          \n          { CardsContext.categories.sort((a, b) => a < b ? -1 : 1)\n              .map((fullCategory, i) => {\n                if (!fullCategory) {return null}\n                return (\n                  <a className={fullCategory.slug === activeCategorySlug ? 'active' : ''} \n                    onClick={() => handleCategoryClick(fullCategory.slug) }\n                    key={`${fullCategory._id}-${i}`}>\n                    {fullCategory.name}\n                  </a>\n                )\n            })\n          }\n        </Styled.CategoriesNav>\n      </Styled.AppHeader>\n\n      { activeCategorySlug === 'all'\n        ? Object.values(CardsContext.cards)\n          .map((fullCategory, categoryIndex) => fullCategory.questions)\n          .flat()\n          .map((question, i) => {\n            return (\n              <Card \n                data={question}\n                activeSide='front'\n                key={`${i}-${question._id}`}\n                position={i}\n                isActive={activeIndex === i}\n                navClickHandler={() => handleNavClick}\n              />\n            )\n          })\n        \n        : CardsContext.cards[activeCategorySlug].questions.map((question, i) => {\n          return (\n            <Card \n              data={question}\n              activeSide='front'\n              key={`${i}-${question._id}`}\n              position={i}\n              isActive={activeIndex === i}\n              navClickHandler={() => handleNavClick} \n            />\n          )\n        })\n      }\n    </Styled.Deck>\n  );\n};\n\nexport default Deck;"]},"metadata":{},"sourceType":"module"}