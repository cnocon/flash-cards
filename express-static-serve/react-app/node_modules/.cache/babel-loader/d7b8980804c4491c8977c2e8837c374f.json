{"ast":null,"code":"var _jsxFileName = \"/Users/cristin/Sites/flash-cards/src/components/Deck/Deck.jsx\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Card from '../Card/Card';\nimport cardsContext from \"../../context/Cards/CardsContext\";\nimport * as Styled from './Deck.styles';\n\nconst Deck = () => {\n  const CardsContext = useContext(cardsContext); // const CategoriesContext = useContext(categoriesContext);\n\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [activeCategory, setActiveCategory] = useState('all');\n  const [categoryCards, setCategoryCards] = useState(null);\n  const obj = {}; // const categories = Object.values(CardsContext.cards).forEach(q => {\n  //   obj[q.slug] = {name: q.name, question_ids: q.questions};\n  // });\n\n  const handleCategoryClick = (e, categorySlug) => {\n    e.preventDefault();\n    setActiveCategory(categorySlug);\n    setCategoryCards(() => activeCategory === 'all' ? CardsContext.cards : CardsContext.cards[activeCategory]);\n  };\n\n  const handleNavClick = e => {\n    const increment = e.target.tagName === 'BUTTON' ? e.target.dataset.increment : e.target.parentNode.dataset.increment;\n    const cardCount = Object.values(CardsContext.cards).map(c => c.questions).flat().length;\n\n    if (increment > 0) {\n      // If advancing to next\n      setActiveIndex(prevActiveIndex => prevActiveIndex + 1 < cardCount ? prevActiveIndex + 1 : 0);\n    } else {\n      // If going back to previous\n      setActiveIndex(prevActiveIndex => prevActiveIndex - 1 >= 0 ? prevActiveIndex - 1 : cardCount - 1);\n    }\n  };\n\n  useEffect(() => {\n    setActiveCategory(() => 'all');\n    setCategoryCards(() => activeCategory === 'all' ? CardsContext.cards : CardsContext.cards[activeCategory]);\n    CardsContext.getCards();\n  }, [categoryCards, activeCategory]);\n  return /*#__PURE__*/React.createElement(Styled.Deck, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    key: 'all',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: e => handleCategoryClick(e, 'all'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Clear All\")), categoryCards ? Object.values(categoryCards).map(q => /*#__PURE__*/React.createElement(\"li\", {\n    key: q.slug,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: e => handleCategoryClick(e, q.slug),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 70\n    }\n  }, q.name))) : null)), CardsContext.cards ? Object.values(CardsContext.cards).flat().map(fullCategory => fullCategory.questions).flat().map((question, i) => /*#__PURE__*/React.createElement(Card, {\n    data: question,\n    activeSide: `front`,\n    key: `${i}-${question._id}`,\n    position: i,\n    isActive: i === activeIndex,\n    navClickHandler: () => handleNavClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  })) : null);\n};\n\nexport default Deck;","map":{"version":3,"sources":["/Users/cristin/Sites/flash-cards/src/components/Deck/Deck.jsx"],"names":["React","useContext","useEffect","useState","Card","cardsContext","Styled","Deck","CardsContext","activeIndex","setActiveIndex","activeCategory","setActiveCategory","categoryCards","setCategoryCards","obj","handleCategoryClick","e","categorySlug","preventDefault","cards","handleNavClick","increment","target","tagName","dataset","parentNode","cardCount","Object","values","map","c","questions","flat","length","prevActiveIndex","getCards","q","slug","name","fullCategory","question","i","_id"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport Card from '../Card/Card';\nimport cardsContext from \"../../context/Cards/CardsContext\";\nimport * as Styled from './Deck.styles'\n\nconst Deck = () => {\n  const CardsContext = useContext(cardsContext);\n  // const CategoriesContext = useContext(categoriesContext);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [activeCategory, setActiveCategory] = useState('all');\n  const [categoryCards, setCategoryCards] = useState(null);\n  const obj = {};\n  // const categories = Object.values(CardsContext.cards).forEach(q => {\n  //   obj[q.slug] = {name: q.name, question_ids: q.questions};\n  // });\n  \n  const handleCategoryClick = (e, categorySlug) => {\n    e.preventDefault();\n    setActiveCategory(categorySlug)\n    setCategoryCards(() => (activeCategory === 'all' ? CardsContext.cards : CardsContext.cards[activeCategory]))\n  }\n\n  const handleNavClick = e => {\n    const increment = e.target.tagName === 'BUTTON' ? e.target.dataset.increment : e.target.parentNode.dataset.increment;\n    const cardCount = Object.values(CardsContext.cards).map(c => c.questions).flat().length;\n    \n    if (increment > 0) {\n      // If advancing to next\n      setActiveIndex(prevActiveIndex => prevActiveIndex + 1 < cardCount ? prevActiveIndex + 1 : 0)\n    } else { \n      // If going back to previous\n      setActiveIndex(prevActiveIndex => prevActiveIndex - 1 >= 0 ? prevActiveIndex - 1 : cardCount - 1) \n    } \n  }\n\n  useEffect(() => {\n    setActiveCategory(() => 'all')\n    setCategoryCards(() => activeCategory === 'all' ? CardsContext.cards : CardsContext.cards[activeCategory])\n    CardsContext.getCards()\n  }, [categoryCards, activeCategory]);\n\n  return (\n    <Styled.Deck>\n      <nav>\n        <ul>\n          <li key={'all'}>\n            <a onClick={e => handleCategoryClick(e, 'all')}>Clear All</a>\n          </li>\n          { categoryCards\n            ? Object.values(categoryCards).map(q => <li key={q.slug}><a onClick={e => handleCategoryClick(e, q.slug)}>{q.name}</a></li>)\n            : null \n          }\n        </ul>\n      </nav>\n      { CardsContext.cards\n        ? Object.values(CardsContext.cards).flat()\n          .map(fullCategory => fullCategory.questions).flat()\n          .map((question, i) => ((\n            <Card \n              data={question}\n              activeSide={`front`}\n              key={`${i}-${question._id}`}\n              position={i}\n              isActive={i === activeIndex}\n              navClickHandler={() => handleNavClick} />\n            )))\n        : null }\n    </Styled.Deck>\n  );\n};\n\nexport default Deck;"]},"metadata":{},"sourceType":"module"}