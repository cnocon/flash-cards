{"ast":null,"code":"var _jsxFileName = \"/Users/cristin/Sites/flash-cards/src/components/Gist/Gist.jsx\";\nimport React from 'react';\n\nclass Gist extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addStylesheet = href => {\n      if (!this.stylesheetAdded) {\n        this.stylesheetAdded = true;\n        var link = document.createElement('link');\n        link.type = 'text/css';\n        link.rel = 'stylesheet';\n        link.href = href;\n        document.head.appendChild(link);\n      }\n    };\n\n    this.gist = props.gist;\n    this.file = props.file;\n    this.stylesheetAdded = false;\n    this.state = {\n      loading: true,\n      src: ''\n    };\n  } // The Gist JSON data includes a stylesheet to add to the page\n  // to make it look correct. `addStylesheet` ensures we only add\n  // the stylesheet one time.\n\n\n  componentDidMount() {\n    // Create a JSONP callback that will set our state\n    // with the data that comes back from the Gist site\n    var gistCallback = Gist.nextGistCallback();\n\n    window[gistCallback] = function (gist) {\n      this.setState({\n        loading: false,\n        src: gist.div\n      });\n      this.addStylesheet(gist.stylesheet);\n    }.bind(this);\n\n    var url = 'https://gist.github.com/' + this.props.gist + '.json?callback=' + gistCallback;\n\n    if (this.props.file) {\n      url += '&file=' + this.props.file;\n    } // Add the JSONP script tag to the document.\n\n\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = url;\n    document.head.appendChild(script);\n  }\n\n  render() {\n    if (this.state.loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 14\n        }\n      }, \"loading...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: this.state.src\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n\n} // Each time we request a Gist, we’ll need to generate a new\n// global function name to serve as the JSONP callback.\n\n\nvar gistCallbackId = 0;\n\nGist.nextGistCallback = () => {\n  return 'embed_gist_callback_' + gistCallbackId++;\n};\n\nexport default Gist; // USAGE\n// <Gist gist=\"aVolpe/fffbe6a9e9858c7e3546fb1d55782152\"/>\n// <Gist gist=\"aVolpe/fffbe6a9e9858c7e3546fb1d55782152\" file=\"SetUtils.java\"/>","map":{"version":3,"sources":["/Users/cristin/Sites/flash-cards/src/components/Gist/Gist.jsx"],"names":["React","Gist","Component","constructor","props","addStylesheet","href","stylesheetAdded","link","document","createElement","type","rel","head","appendChild","gist","file","state","loading","src","componentDidMount","gistCallback","nextGistCallback","window","setState","div","stylesheet","bind","url","script","render","__html","gistCallbackId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAcnBC,aAdmB,GAcFC,IAAD,IAAU;AACxB,UAAI,CAAC,KAAKC,eAAV,EAA2B;AACzB,aAAKA,eAAL,GAAuB,IAAvB;AACA,YAAIC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAX;AACAF,QAAAA,IAAI,CAACG,IAAL,GAAY,UAAZ;AACAH,QAAAA,IAAI,CAACI,GAAL,GAAW,YAAX;AACAJ,QAAAA,IAAI,CAACF,IAAL,GAAYA,IAAZ;AAEAG,QAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BN,IAA1B;AACD;AACF,KAxBkB;;AAEf,SAAKO,IAAL,GAAYX,KAAK,CAACW,IAAlB;AACA,SAAKC,IAAL,GAAYZ,KAAK,CAACY,IAAlB;AACA,SAAKT,eAAL,GAAuB,KAAvB;AACA,SAAKU,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,IADE;AAEXC,MAAAA,GAAG,EAAE;AAFM,KAAb;AAIH,GAVgC,CAYjC;AACA;AACA;;;AAaAC,EAAAA,iBAAiB,GAAG;AAClB;AACA;AACA,QAAIC,YAAY,GAAGpB,IAAI,CAACqB,gBAAL,EAAnB;;AACAC,IAAAA,MAAM,CAACF,YAAD,CAAN,GAAuB,UAASN,IAAT,EAAe;AAClC,WAAKS,QAAL,CAAc;AACZN,QAAAA,OAAO,EAAE,KADG;AAEZC,QAAAA,GAAG,EAAEJ,IAAI,CAACU;AAFE,OAAd;AAIA,WAAKpB,aAAL,CAAmBU,IAAI,CAACW,UAAxB;AACH,KANsB,CAMrBC,IANqB,CAMhB,IANgB,CAAvB;;AAOA,QAAIC,GAAG,GAAG,6BAA6B,KAAKxB,KAAL,CAAWW,IAAxC,GAA+C,iBAA/C,GAAmEM,YAA7E;;AACA,QAAI,KAAKjB,KAAL,CAAWY,IAAf,EAAqB;AACnBY,MAAAA,GAAG,IAAI,WAAW,KAAKxB,KAAL,CAAWY,IAA7B;AACD,KAdiB,CAelB;;;AACA,QAAIa,MAAM,GAAGpB,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACAmB,IAAAA,MAAM,CAAClB,IAAP,GAAc,iBAAd;AACAkB,IAAAA,MAAM,CAACV,GAAP,GAAaS,GAAb;AACAnB,IAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0Be,MAA1B;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKb,KAAL,CAAWC,OAAf,EAAwB;AACtB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFD,MAEO;AACL,0BAAO;AAAK,QAAA,uBAAuB,EAAE;AAACa,UAAAA,MAAM,EAAE,KAAKd,KAAL,CAAWE;AAApB,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AACF;;AAtDgC,C,CAyDnC;AACA;;;AACA,IAAIa,cAAc,GAAG,CAArB;;AACA/B,IAAI,CAACqB,gBAAL,GAAwB,MAAM;AAC1B,SAAO,yBAAyBU,cAAc,EAA9C;AACH,CAFD;;AAGA,eAAe/B,IAAf,C,CACA;AACA;AACA","sourcesContent":["import React from 'react';\n\nclass Gist extends React.Component {\n  constructor(props) {\n      super(props);\n      this.gist = props.gist;\n      this.file = props.file;\n      this.stylesheetAdded = false;\n      this.state = {\n        loading: true,\n        src: ''\n      };\n  }\n    \n  // The Gist JSON data includes a stylesheet to add to the page\n  // to make it look correct. `addStylesheet` ensures we only add\n  // the stylesheet one time.\n  addStylesheet = (href) => {\n    if (!this.stylesheetAdded) {\n      this.stylesheetAdded = true;\n      var link = document.createElement('link');\n      link.type = 'text/css';\n      link.rel = 'stylesheet';\n      link.href = href;\n  \n      document.head.appendChild(link);\n    }\n  }\n  \n  componentDidMount() {\n    // Create a JSONP callback that will set our state\n    // with the data that comes back from the Gist site\n    var gistCallback = Gist.nextGistCallback();\n    window[gistCallback] = function(gist) {\n        this.setState({\n          loading: false,\n          src: gist.div\n        });\n        this.addStylesheet(gist.stylesheet);\n    }.bind(this);\n    var url = 'https://gist.github.com/' + this.props.gist + '.json?callback=' + gistCallback;\n    if (this.props.file) {\n      url += '&file=' + this.props.file;\n    }\n    // Add the JSONP script tag to the document.\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = url;\n    document.head.appendChild(script);\n  }\n  render() {\n    if (this.state.loading) {\n      return <div>loading...</div>;\n    } else {\n      return <div dangerouslySetInnerHTML={{__html: this.state.src}} />;\n    }\n  }\n}\n\n// Each time we request a Gist, we’ll need to generate a new\n// global function name to serve as the JSONP callback.\nvar gistCallbackId = 0;\nGist.nextGistCallback = () => {\n    return 'embed_gist_callback_' + gistCallbackId++;\n};\nexport default Gist;\n// USAGE\n// <Gist gist=\"aVolpe/fffbe6a9e9858c7e3546fb1d55782152\"/>\n// <Gist gist=\"aVolpe/fffbe6a9e9858c7e3546fb1d55782152\" file=\"SetUtils.java\"/>"]},"metadata":{},"sourceType":"module"}