{"ast":null,"code":"var _jsxFileName = \"/Users/cristin/Sites/flash-cards/src/components/Deck/Deck.jsx\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Card from '../Card/Card';\nimport cardsContext from \"../../context/Cards/CardsContext\";\n\nconst Deck = () => {\n  const CardsContext = useContext(cardsContext);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [data, setData] = useState(null); // const cardDeck = CardsContext.getCards();\n\n  console.log('cardDeck');\n\n  const handleNavClick = increment => {\n    if (increment > 0) {\n      // If advancing to next\n      setActiveIndex(prevActiveIndex => prevActiveIndex + 1 < CardsContext.cards.length ? prevActiveIndex + 1 : 0);\n    } else {\n      // If going back to previous\n      setActiveIndex(prevActiveIndex => prevActiveIndex - 1 >= 0 ? prevActiveIndex - 1 : 0);\n    }\n  };\n\n  useEffect(() => {\n    CardsContext.getCards();\n    setData(CardsContext.cards[activeIndex]);\n    console.log(data);\n  }, [activeIndex]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, data.length // ? CardsContext.cards.map((card, i) => (\n  ?\n  /*#__PURE__*/\n  React.createElement(Card, {\n    data: data,\n    key: data._id,\n    isActive: true,\n    navClickHandler: () => handleNavClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }\n  }) // ))\n  : null);\n};\n\nexport default Deck;","map":{"version":3,"sources":["/Users/cristin/Sites/flash-cards/src/components/Deck/Deck.jsx"],"names":["React","useContext","useEffect","useState","Card","cardsContext","Deck","CardsContext","activeIndex","setActiveIndex","data","setData","console","log","handleNavClick","increment","prevActiveIndex","cards","length","getCards","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,YAAY,GAAGN,UAAU,CAACI,YAAD,CAA/B;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC,CAHiB,CAIjB;;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;;AAEA,QAAMC,cAAc,GAAGC,SAAS,IAAI;AAClC,QAAIA,SAAS,GAAG,CAAhB,EAAmB;AACjB;AACAN,MAAAA,cAAc,CAACO,eAAe,IAAIA,eAAe,GAAG,CAAlB,GAAsBT,YAAY,CAACU,KAAb,CAAmBC,MAAzC,GAAkDF,eAAe,GAAG,CAApE,GAAwE,CAA5F,CAAd;AACD,KAHD,MAGO;AACL;AACAP,MAAAA,cAAc,CAACO,eAAe,IAAIA,eAAe,GAAG,CAAlB,IAAuB,CAAvB,GAA2BA,eAAe,GAAG,CAA7C,GAAiD,CAArE,CAAd;AACD;AACF,GARD;;AAUAd,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,YAAY,CAACY,QAAb;AACAR,IAAAA,OAAO,CAACJ,YAAY,CAACU,KAAb,CAAmBT,WAAnB,CAAD,CAAP;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD,GAJQ,EAIN,CAACF,WAAD,CAJM,CAAT;AAMA,sBACE,0CACGE,IAAI,CAACQ,MAAL,CACC;AADD;AAAA;AAEI,sBAAC,IAAD;AACC,IAAA,IAAI,EAAER,IADP;AAEC,IAAA,GAAG,EAAEA,IAAI,CAACU,GAFX;AAGC,IAAA,QAAQ,EAAE,IAHX;AAIC,IAAA,eAAe,EAAE,MAAMN,cAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAQC;AARD,IASG,IAVN,CADF;AAcD,CArCD;;AAuCA,eAAeR,IAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport Card from '../Card/Card';\nimport cardsContext from \"../../context/Cards/CardsContext\";\n\nconst Deck = () => {\n  const CardsContext = useContext(cardsContext);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [data, setData] = useState(null)\n  // const cardDeck = CardsContext.getCards();\n  console.log('cardDeck', )\n\n  const handleNavClick = increment => {\n    if (increment > 0) {\n      // If advancing to next\n      setActiveIndex(prevActiveIndex => prevActiveIndex + 1 < CardsContext.cards.length ? prevActiveIndex + 1 : 0)\n    } else { \n      // If going back to previous\n      setActiveIndex(prevActiveIndex => prevActiveIndex - 1 >= 0 ? prevActiveIndex - 1 : 0) \n    } \n  }\n\n  useEffect(() => {\n    CardsContext.getCards();\n    setData(CardsContext.cards[activeIndex])\n    console.log(data);\n  }, [activeIndex]);\n\n  return (\n    <>\n      {data.length\n        // ? CardsContext.cards.map((card, i) => (\n        ?  <Card \n            data={data} \n            key={data._id}\n            isActive={true}\n            navClickHandler={() => handleNavClick}\n          />\n        // ))\n        : null}\n    </>\n  );\n};\n\nexport default Deck;"]},"metadata":{},"sourceType":"module"}