{"ast":null,"code":"var _jsxFileName = \"/Users/cristin/Sites/flash-cards/src/components/Deck/Deck.jsx\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport CardsState from '../../context/Cards/CardsState';\nimport cardsContext from \"../../context/Cards/CardsContext\";\nimport Card from '../Card/Card';\nimport * as Styled from './Deck.styles';\n\nconst Deck = () => {\n  const CardsContext = useContext(cardsContext);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [activeCategory, setActiveCategory] = useState({\n    _id: ''\n  });\n\n  const handleNavClick = e => {\n    const increment = e.target.tagName === 'BUTTON' ? e.target.dataset.increment : e.target.parentNode.dataset.increment; // const cardCount = Object.values(CardsContext.cards).map(c => c.questions).flat().length;\n\n    if (increment > 0) {\n      setActiveIndex(prevActiveIndex => prevActiveIndex + 1 < cardCount ? prevActiveIndex + 1 : 0);\n    } else {\n      setActiveIndex(prevActiveIndex => prevActiveIndex - 1 >= 0 ? prevActiveIndex - 1 : cardCount - 1);\n    }\n  };\n\n  useEffect(() => {\n    // CardsContext.getCards();\n    cardsContext.getActiveCards();\n    cardsContext.getCategories();\n    console.log(CardsContext.activeCards);\n    console.log(CardsContext.categories);\n    return CardsContext.activeCards;\n  }, []);\n  return /*#__PURE__*/React.createElement(CardsState, {\n    category_id: activeCategory._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Styled.Deck, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, CardsContext.activeCards.length ? console.log(CardsContext.activeCards) : console.log(CardsContext.cards)));\n};\n\nexport default Deck;","map":{"version":3,"sources":["/Users/cristin/Sites/flash-cards/src/components/Deck/Deck.jsx"],"names":["React","useContext","useEffect","useState","CardsState","cardsContext","Card","Styled","Deck","CardsContext","activeIndex","setActiveIndex","activeCategory","setActiveCategory","_id","handleNavClick","e","increment","target","tagName","dataset","parentNode","prevActiveIndex","cardCount","getActiveCards","getCategories","console","log","activeCards","categories","length","cards"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AAEA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAO,KAAKC,MAAZ,MAAwB,eAAxB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,YAAY,GAAGR,UAAU,CAACI,YAAD,CAA/B;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC;AAACW,IAAAA,GAAG,EAAE;AAAN,GAAD,CAApD;;AAEA,QAAMC,cAAc,GAAGC,CAAC,IAAI;AAC1B,UAAMC,SAAS,GAAGD,CAAC,CAACE,MAAF,CAASC,OAAT,KAAqB,QAArB,GAAgCH,CAAC,CAACE,MAAF,CAASE,OAAT,CAAiBH,SAAjD,GAA6DD,CAAC,CAACE,MAAF,CAASG,UAAT,CAAoBD,OAApB,CAA4BH,SAA3G,CAD0B,CAE1B;;AACA,QAAIA,SAAS,GAAG,CAAhB,EAAmB;AACjBN,MAAAA,cAAc,CAACW,eAAe,IAAIA,eAAe,GAAG,CAAlB,GAAsBC,SAAtB,GAAkCD,eAAe,GAAG,CAApD,GAAwD,CAA5E,CAAd;AACD,KAFD,MAEO;AACLX,MAAAA,cAAc,CAACW,eAAe,IAAIA,eAAe,GAAG,CAAlB,IAAuB,CAAvB,GAA2BA,eAAe,GAAG,CAA7C,GAAiDC,SAAS,GAAG,CAAjF,CAAd;AACD;AACF,GARD;;AAUArB,EAAAA,SAAS,CAAC,MAAM;AACd;AACAG,IAAAA,YAAY,CAACmB,cAAb;AACAnB,IAAAA,YAAY,CAACoB,aAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYlB,YAAY,CAACmB,WAAzB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYlB,YAAY,CAACoB,UAAzB;AACA,WAAOpB,YAAY,CAACmB,WAApB;AACD,GAPQ,EAON,EAPM,CAAT;AASA,sBACE,oBAAC,UAAD;AAAY,IAAA,WAAW,EAAEhB,cAAc,CAACE,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD,CAAQ,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIL,YAAY,CAACmB,WAAb,CAAyBE,MAAzB,GACEJ,OAAO,CAACC,GAAR,CAAYlB,YAAY,CAACmB,WAAzB,CADF,GAEEF,OAAO,CAACC,GAAR,CAAYlB,YAAY,CAACsB,KAAzB,CAHN,CADF,CADF;AA2BD,CAnDD;;AAqDA,eAAevB,IAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\n\nimport CardsState from '../../context/Cards/CardsState';\nimport cardsContext from \"../../context/Cards/CardsContext\";\nimport Card from '../Card/Card';\nimport * as Styled from './Deck.styles'\n\nconst Deck = () => {\n  const CardsContext = useContext(cardsContext);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [activeCategory, setActiveCategory] = useState({_id: ''});\n\n  const handleNavClick = e => {\n    const increment = e.target.tagName === 'BUTTON' ? e.target.dataset.increment : e.target.parentNode.dataset.increment;\n    // const cardCount = Object.values(CardsContext.cards).map(c => c.questions).flat().length;\n    if (increment > 0) {\n      setActiveIndex(prevActiveIndex => prevActiveIndex + 1 < cardCount ? prevActiveIndex + 1 : 0)\n    } else { \n      setActiveIndex(prevActiveIndex => prevActiveIndex - 1 >= 0 ? prevActiveIndex - 1 : cardCount - 1) \n    }\n  }\n\n  useEffect(() => {\n    // CardsContext.getCards();\n    cardsContext.getActiveCards();\n    cardsContext.getCategories();\n    console.log(CardsContext.activeCards);\n    console.log(CardsContext.categories);\n    return CardsContext.activeCards\n  }, []);\n  \n  return (\n    <CardsState category_id={activeCategory._id}>\n      <Styled.Deck>\n        { CardsContext.activeCards.length\n          ? console.log(CardsContext.activeCards)\n          : console.log(CardsContext.cards) }\n          \n          {/* Object.values(ContextCards.cards)\n          .flat()\n          .map(fullCategory => fullCategory.questions)\n          .flat()\n          .map((question, i) => { \n          //     return (\n          //       <Card \n          //         data={question}\n          //         activeSide={`front`}\n          //         key={`${i}-${question._id}`}\n          //         position={i}\n          //         isActive={i === activeIndex}\n          //         navClickHandler={() => handleNavClick}\n          //       />\n          //     )\n          //   })\n          // : null}*/}\n        </Styled.Deck>\n      </CardsState>\n  );\n};\n\nexport default Deck;"]},"metadata":{},"sourceType":"module"}