{"ast":null,"code":"var _jsxFileName = \"/Users/cristin/Sites/flash-cards/src/components/Deck/Deck.jsx\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Card from '../Card/Card';\nimport cardsContext from \"../../context/Cards/CardsContext\";\nimport * as Styled from './Deck.styles';\n\nconst Deck = () => {\n  const CardsContext = useContext(cardsContext);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [activeCategory, setActiveCategory] = useState('all');\n  const [categoryCards, setCategoryCards] = useState([]);\n\n  const handleCategoryClick = (e, categorySlug) => {\n    e.preventDefault();\n    setActiveIndex(0);\n    setActiveCategory(categorySlug);\n    setCategoryCards(activeCategory === 'all' ? CardsContext.cards : CardsContext.cards[activeCategory]);\n  };\n\n  const handleNavClick = e => {\n    const increment = e.target.tagName === 'BUTTON' ? e.target.dataset.increment : e.target.parentNode.dataset.increment;\n    const activeCards = activeCategory === 'all' ? CardsContext.cards : CardsContext.cards[activeCategory];\n    const cardCount = Object.values(activeCards).map(c => c.questions).flat().length;\n\n    if (increment > 0) {\n      // If advancing to next\n      setActiveIndex(prevActiveIndex => prevActiveIndex + 1 < cardCount ? prevActiveIndex + 1 : 0);\n    } else {\n      // If going back to previous\n      setActiveIndex(prevActiveIndex => prevActiveIndex - 1 >= 0 ? prevActiveIndex - 1 : cardCount - 1);\n    }\n  };\n\n  useEffect(() => {\n    CardsContext.getCards();\n    setCardsInRotation();\n    setCategoryCards(activeCategory === 'all' ? CardsContext.cards : CardsContext.cards[activeCategory]);\n  }, [categoryCards, activeCategory]);\n  return /*#__PURE__*/React.createElement(Styled.Deck, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    key: 'all',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: e => handleCategoryClick(e, 'all'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, \"Clear All\")), CardsContext.cards ? Object.values(CardsContext.cards).map(fullCategory => /*#__PURE__*/React.createElement(\"li\", {\n    key: fullCategory.slug,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 67\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: e => handleCategoryClick(e, fullCategory.slug),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 95\n    }\n  }, fullCategory.name))) : null)), CardsContext.cards ? Object.values(CardsContext.cards).map(fullCategory => fullCategory.questions.map((question, i) => /*#__PURE__*/React.createElement(Card, {\n    data: question,\n    activeSide: `front`,\n    key: `${i}-${question._id}`,\n    position: i,\n    isActive: i === activeIndex,\n    navClickHandler: () => handleNavClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }))) : null);\n};\n\nexport default Deck;","map":{"version":3,"sources":["/Users/cristin/Sites/flash-cards/src/components/Deck/Deck.jsx"],"names":["React","useContext","useEffect","useState","Card","cardsContext","Styled","Deck","CardsContext","activeIndex","setActiveIndex","activeCategory","setActiveCategory","categoryCards","setCategoryCards","handleCategoryClick","e","categorySlug","preventDefault","cards","handleNavClick","increment","target","tagName","dataset","parentNode","activeCards","cardCount","Object","values","map","c","questions","flat","length","prevActiveIndex","getCards","setCardsInRotation","fullCategory","slug","name","question","i","_id"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport Card from '../Card/Card';\nimport cardsContext from \"../../context/Cards/CardsContext\";\nimport * as Styled from './Deck.styles'\n\nconst Deck = () => {\n  const CardsContext = useContext(cardsContext);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [activeCategory, setActiveCategory] = useState('all');\n  const [categoryCards, setCategoryCards] = useState([])\n  \n  const handleCategoryClick = (e, categorySlug) => {\n    e.preventDefault();\n    setActiveIndex(0);\n    setActiveCategory(categorySlug)\n    setCategoryCards(activeCategory === 'all' ? CardsContext.cards : CardsContext.cards[activeCategory])\n  }\n\n  const handleNavClick = e => {\n    const increment = e.target.tagName === 'BUTTON' ? e.target.dataset.increment : e.target.parentNode.dataset.increment;\n    const activeCards = activeCategory === 'all' ? CardsContext.cards : CardsContext.cards[activeCategory]\n    const cardCount = Object.values(activeCards).map(c => c.questions).flat().length;\n    \n    if (increment > 0) {\n      // If advancing to next\n      setActiveIndex(prevActiveIndex => prevActiveIndex + 1 < cardCount ? prevActiveIndex + 1 : 0)\n    } else { \n      // If going back to previous\n      setActiveIndex(prevActiveIndex => prevActiveIndex - 1 >= 0 ? prevActiveIndex - 1 : cardCount - 1) \n    } \n  }\n  \n  useEffect(() => {\n    CardsContext.getCards();\n    setCardsInRotation()\n    setCategoryCards(activeCategory === 'all' ? CardsContext.cards : CardsContext.cards[activeCategory])\n  }, [categoryCards, activeCategory]);\n\n  return (\n    <Styled.Deck>\n      <nav><ul>\n        <li key={'all'}><a onClick={e => handleCategoryClick(e, 'all')}>Clear All</a></li>\n        { CardsContext.cards\n          ? Object.values(CardsContext.cards).map(fullCategory => <li key={fullCategory.slug}><a onClick={e => handleCategoryClick(e, fullCategory.slug)}>{fullCategory.name}</a></li>)\n          : null }\n        </ul></nav>\n      { CardsContext.cards\n        ? Object.values(CardsContext.cards).map(fullCategory => (\n            fullCategory.questions.map((question, i) => (\n              <Card \n                data={question}\n                activeSide={`front`}\n                key={`${i}-${question._id}`}\n                position={i}\n                isActive={i === activeIndex}\n                navClickHandler={() => handleNavClick}  />\n            ))\n          ))\n        : null }\n    </Styled.Deck>\n  );\n};\n\nexport default Deck;"]},"metadata":{},"sourceType":"module"}