{"ast":null,"code":"var _jsxFileName = \"/Users/cristin/Sites/flash-cards/src/components/Card/utils.js\";\nimport React from 'react';\nimport Gist from '../Gist/Gist';\nimport ReactHtmlParser from 'react-html-parser';\nimport { Helmet } from 'react-helmet-async';\nexport const level = difficulty => {\n  if (difficulty <= 3) {\n    return {\n      text: 'Beginner',\n      tagClass: 'fa-tachometer-slowest'\n    };\n  } else if (difficulty > 7) {\n    return {\n      tagClass: 'fa-tachometer-fastest',\n      text: 'Expert'\n    };\n  }\n\n  return {\n    tagClass: 'fa-tachometer-average',\n    text: 'Mid-Level'\n  };\n};\nexport const getCategoryClass = category => {\n  const yellowTags = ['Performance'];\n  const purpleTags = ['Gatsby'];\n  const royalBlueTags = ['React'];\n  const blueTags = ['JavaScript'];\n  const greenTags = ['Node', 'HTML5'];\n  const redTags = ['CSS'];\n  const orangeTags = ['Git', 'Accessibility'];\n\n  if (yellowTags.includes(category)) {\n    return 'yellow';\n  } else if (purpleTags.includes(category)) {\n    return 'purple';\n  } else if (blueTags.includes(category)) {\n    return 'blue';\n  } else if (greenTags.includes(category)) {\n    return 'green';\n  } else if (redTags.includes(category)) {\n    return 'red';\n  } else if (orangeTags.includes(category)) {\n    return 'orange';\n  } else if (royalBlueTags.includes(category)) {\n    return 'royal-blue';\n  } else {\n    return 'gray';\n  }\n};\n\nconst Snippet = ({\n  item\n}) => {\n  const {\n    lines,\n    lang\n  } = item;\n  const compiledLines = lines.map(line => line).join(\"\\n\");\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"script\", {\n    src: \"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js?skin=doxy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"pre\", {\n    className: \"prettyprint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    className: `lang-${lang}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 36\n    }\n  }, ReactHtmlParser(compiledLines))));\n};\n\nconst imgClickHandler = e => {\n  const img = e.target.querySelector('img');\n  console.log(e.target);\n\n  if (document.querySelector('.overlay')) {\n    document.querySelector('.overlay').remove();\n    document.querySelector('.lightbox').classList.remove('lightbox');\n    e.target.style = {};\n  } else {\n    const div = document.createElement('div');\n    div.classList.add('overlay');\n    e.target.parentNode.classList.add('lightbox');\n    e.target.parentNode.parentNode.insertBefore(div, e.target.parentNode);\n  }\n};\n\nexport const generateMedia = media => {\n  console.log(media.hasOwnProperty('height'));\n  const styles = media.hasOwnProperty('height') ? {\n    maxHeight: `${media.height}px`\n  } : {};\n\n  switch (media.type) {\n    case 'image':\n      return (\n        /*#__PURE__*/\n        // re-add above line to img-container-outer if we want overlays back\n        React.createElement(\"div\", {\n          className: \"img-container-outer\",\n          key: media.url,\n          onClick: imgClickHandler,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"img-container\",\n          key: media.url,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: media.url,\n          alt: media.desc,\n          style: styles,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }\n        })), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"image-note\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }\n        }, \"Click or tap image to view larger version.\"))\n      );\n\n    case 'gist':\n      return /*#__PURE__*/React.createElement(Gist, {\n        gist: media.gist,\n        key: media.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 14\n        }\n      });\n\n    case 'snippet':\n      return /*#__PURE__*/React.createElement(Snippet, {\n        item: media,\n        key: Math.random(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 14\n        }\n      });\n\n    default: // do nothing\n\n  }\n};","map":{"version":3,"sources":["/Users/cristin/Sites/flash-cards/src/components/Card/utils.js"],"names":["React","Gist","ReactHtmlParser","Helmet","level","difficulty","text","tagClass","getCategoryClass","category","yellowTags","purpleTags","royalBlueTags","blueTags","greenTags","redTags","orangeTags","includes","Snippet","item","lines","lang","compiledLines","map","line","join","imgClickHandler","e","img","target","querySelector","console","log","document","remove","classList","style","div","createElement","add","parentNode","insertBefore","generateMedia","media","hasOwnProperty","styles","maxHeight","height","type","url","desc","gist","id","Math","random"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Gist from '../Gist/Gist';\nimport ReactHtmlParser from 'react-html-parser'\nimport { Helmet } from 'react-helmet-async'\n\nexport const level = difficulty => {\n  if (difficulty <= 3) {\n    return {\n      text: 'Beginner',\n      tagClass: 'fa-tachometer-slowest'\n    }\n  } else if (difficulty > 7) {\n    return {\n      tagClass: 'fa-tachometer-fastest', \n      text: 'Expert'\n    } \n  }\n  return {\n    tagClass: 'fa-tachometer-average',\n    text: 'Mid-Level'\n  } \n}\n\nexport const getCategoryClass = category => {\n  const yellowTags = ['Performance']\n  const purpleTags = ['Gatsby']\n  const royalBlueTags = ['React']\n  const blueTags = ['JavaScript']\n  const greenTags = ['Node', 'HTML5']\n  const redTags = ['CSS']\n  const orangeTags = ['Git', 'Accessibility']\n\n  if (yellowTags.includes(category)) {\n    return 'yellow'\n  } else if (purpleTags.includes(category)) {\n    return 'purple'\n  } else if (blueTags.includes(category)) {\n    return 'blue'\n  } else if (greenTags.includes(category)) {\n    return 'green'\n  } else if (redTags.includes(category)) {\n    return 'red'\n  } else if (orangeTags.includes(category)) {\n    return 'orange'\n  } else if (royalBlueTags.includes(category)) {\n    return 'royal-blue'\n  } else {\n    return 'gray'\n  }\n}\n\nconst Snippet = ({item}) => {\n  const { lines, lang } = item;\n  const compiledLines = lines.map(line => line).join(\"\\n\");\n\n  return (\n    <>\n      <Helmet>\n        <script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js?skin=doxy\"></script>\n      </Helmet>\n      <pre className=\"prettyprint\"><code className={`lang-${lang}`}>\n        {ReactHtmlParser(compiledLines)}\n      </code></pre>\n    </>\n  )\n}\n\nconst imgClickHandler = e => {\n  const img = e.target.querySelector('img');\n  console.log(e.target);\n  if (document.querySelector('.overlay')) {\n    document.querySelector('.overlay').remove();\n    document.querySelector('.lightbox').classList.remove('lightbox')\n    e.target.style = {};\n  } else {\n    const div = document.createElement('div');\n    div.classList.add('overlay');\n    e.target.parentNode.classList.add('lightbox');\n    e.target.parentNode.parentNode.insertBefore(div, e.target.parentNode);\n  }\n};\n\nexport const generateMedia = media => {\n  console.log(media.hasOwnProperty('height'));\n  const styles = media.hasOwnProperty('height') ? { maxHeight: `${media.height}px` } : {};\n  switch (media.type) {\n    case 'image':\n      return (\n        \n          // re-add above line to img-container-outer if we want overlays back\n        <div className=\"img-container-outer\" key={media.url} onClick={imgClickHandler}>\n          <div className='img-container'key={media.url}>\n            <img \n              src={media.url}\n              alt={media.desc}\n              style={styles}\n            />\n          </div>\n          <p className=\"image-note\">Click or tap image to view larger version.</p>\n        </div>\n      )\n    case 'gist':\n      return <Gist gist={media.gist} key={media.id}/>;\n    case 'snippet':\n      return <Snippet item={media} key={Math.random()} />;\n    default:\n      // do nothing\n  }\n}"]},"metadata":{},"sourceType":"module"}